
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: awsfederatedroles.aws.managed.openshift.io
spec:
  group: aws.managed.openshift.io
  names:
    kind: AWSFederatedRole
    listKind: AWSFederatedRoleList
    plural: awsfederatedroles
    singular: awsfederatedrole
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Status the federated role
      jsonPath: .status.state
      name: State
      type: string
    - description: Age since federated role was created
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AWSFederatedRole is the Schema for the awsfederatedroles API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSFederatedRoleSpec defines the desired state of AWSFederatedRole
            properties:
              awsCustomPolicy:
                description: AWSCustomPolicy is the defenition of a custom aws permission
                  policy that will be associated with this role
                properties:
                  awsStatements:
                    items:
                      description: StatementEntry is the smallest gourping of permissions
                        required to create an aws policy
                      properties:
                        action:
                          items:
                            type: string
                          type: array
                        condition:
                          description: Condition contains the aws Condition map to
                            use for IAM roles
                          properties:
                            StringEquals:
                              additionalProperties:
                                type: string
                              description: A map of the condition
                              type: object
                          type: object
                        effect:
                          type: string
                        principal:
                          description: Principal  contains the aws account id for
                            the principle entity of a role
                          properties:
                            AWS:
                              description: aws account id
                              items:
                                type: string
                              type: array
                          required:
                          - AWS
                          type: object
                        resource:
                          items:
                            type: string
                          type: array
                      required:
                      - action
                      - effect
                      type: object
                    type: array
                  description:
                    type: string
                  name:
                    type: string
                required:
                - awsStatements
                - description
                - name
                type: object
              awsManagedPolicies:
                description: AWSManagedPolicies is a list of amazong managed policies
                  that exist in aws
                items:
                  type: string
                type: array
                x-kubernetes-list-type: atomic
              roleDescription:
                description: RoleDescription is a user friendly description of the
                  role, this discription will be displayed in the OCM user interface
                type: string
              roleDisplayName:
                description: RoleDisplayName is a user friendly display name for the
                  OCM user interface
                type: string
            required:
            - roleDescription
            - roleDisplayName
            type: object
          status:
            description: AWSFederatedRoleStatus defines the observed state of AWSFederatedRole
            properties:
              conditions:
                items:
                  description: AWSFederatedRoleCondition is a Kubernetes condition
                    type for tracking AWS Federated Role status changes
                  properties:
                    lastProbeTime:
                      description: LastProbeTime is the last time we probed the condition.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the laste time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message is a human-readable message indicating
                        details about last transition.
                      type: string
                    reason:
                      description: Reason is a unique, one-word, CamelCase reason
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition
                      type: string
                    type:
                      description: Type is the type of the condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              state:
                description: AWSFederatedRoleState defines the various status an AWSFederatedRole
                  CR can have
                type: string
            required:
            - conditions
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
