apiVersion: v1
kind: Template
metadata:
  name: olm-artifacts-template

parameters:
- name: REGISTRY_IMG
  required: true
- name: CHANNEL
  value: staging
- name: IMAGE_DIGEST
  required: true
- name: ACCOUNT_LIMIT
  required: true
- name: ROOT_OU_ID
  required: true
- name: BASE_OU_ID
  required: true
- name: ACCOUNT_POOL_SIZE
  required: true
- name: ACCOUNT_POOL_NAME
  required: true
- name: STS_JUMP_ROLE
  required: true
- name: SUPPORT_JUMP_ROLE
  required: true
- name: SHARD_NAME
  required: true
- name: AWS_MANAGED_TAGS
  required: false

objects:
- apiVersion: operators.coreos.com/v1alpha1
  kind: CatalogSource
  metadata:
    name: aws-account-operator-catalog
  spec:
    sourceType: grpc
    image: ${REGISTRY_IMG}@${IMAGE_DIGEST}
    displayName: aws-account-operator Registry
    publisher: SRE

- apiVersion: operators.coreos.com/v1alpha2
  kind: OperatorGroup
  metadata:
    name: aws-account-operator-og
  spec:
    targetNamespaces:
    - aws-account-operator

- apiVersion: operators.coreos.com/v1alpha1
  kind: Subscription
  metadata:
    name: aws-account-operator
  spec:
    channel: ${CHANNEL}
    name: aws-account-operator
    source: aws-account-operator-catalog
    sourceNamespace: aws-account-operator

- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: aws-account-operator-configmap
    namespace: aws-account-operator
  data:
    account-limit: "${ACCOUNT_LIMIT}"
    root: ${ROOT_OU_ID}
    base: ${BASE_OU_ID}
    sts-jump-role: ${STS_JUMP_ROLE}
    support-jump-role: ${SUPPORT_JUMP_ROLE}
    shard-name: ${SHARD_NAME}
    aws-managed-tags: "${AWS_MANAGED_TAGS}"
    regions: |
      us-east-1:ami-000db10762d0c4c05:t2.micro
      us-east-2:ami-094720ddca649952f:t2.micro
      us-west-1:ami-04642fc8fca1e8e67:t2.micro
      us-west-2:ami-0a7e1ebfee7a4570e:t2.micro
      ca-central-1:ami-06ca3c0058d0275b3:t2.micro
      eu-north-1:ami-08bc26bf92a90ba04:t3.micro
      eu-central-1:ami-09de4a4c670389e4b:t2.micro
      eu-west-1:ami-0202869bdd0fc8c75:t2.micro
      eu-west-2:ami-0188c0c5eddd2d032:t2.micro
      eu-west-3:ami-0c4224e392ec4e440:t2.micro
      eu-south-1:ami-04684e5a51afd7579:t3.micro
      ap-northeast-1:ami-00b95502a4d51a07e:t2.micro
      ap-northeast-2:ami-041b16ca28f036753:t2.micro
      ap-northeast-3:ami-070dd2ec8c4a6df38:t2.micro
      ap-east-1:ami-f4fab885:t3.micro
      ap-south-1:ami-0963937a03c01ecd4:t2.micro
      ap-southeast-1:ami-055c55112e25b1f1f:t2.micro
      ap-southeast-2:ami-036b423b657376f5b:t2.micro
      sa-east-1:ami-05c1c16cac05a7c0b:t2.micro
      af-south-1:ami-0f4b49fefef9be45a:t3.micro
      me-south-1:ami-0b41a37a62a4296fc:t3.micro

- apiVersion: aws.managed.openshift.io/v1alpha1
  kind: AccountPool
  metadata:
    name: ${ACCOUNT_POOL_NAME}
    namespace: aws-account-operator
  spec:
    poolSize: ${{ACCOUNT_POOL_SIZE}}

- apiVersion: aws.managed.openshift.io/v1alpha1
  kind: AWSFederatedRole
  metadata:
    name: network-mgmt
    namespace: aws-account-operator
  spec:
    roleDisplayName: Network management
    roleDescription: User can view all AWS resources, and can edit VPC related resources to enable services such as IPsec VPN and VPC peering.
    awsCustomPolicy:
      name:  CustomerAdministratorAccess
      description: Description of CustomerAdministratorAccess
      awsStatements:
        - effect: Allow
          action:
            - "ec2:AcceptVpcPeeringConnection"
            - "ec2:AttachVpnGateway"
            - "ec2:CreateCustomerGateway"
            - "ec2:CreateRoute"
            - "ec2:CreateTags"
            - "ec2:CreateVPCEndpoint"
            - "ec2:CreateVpcPeeringConnection"
            - "ec2:CreateVpnConnection"
            - "ec2:CreateVpnConnectionRoute"
            - "ec2:CreateVpnGateway"
            - "ec2:DeleteVpcPeeringConnection"
            - "ec2:DeleteVpnConnection"
            - "ec2:DeleteVpnConnectionRoute"
            - "ec2:DeleteVpnGateway"
            - "ec2:DescribeAvailabilityZones"
            - "ec2:DescribeRouteTables"
            - "ec2:DescribeSubnets"
            - "ec2:DescribeTransitGatewayAttachments"
            - "ec2:DescribeTransitGatewayVpcAttachments"
            - "ec2:DescribeTransitGateways"
            - "ec2:DescribeVPCEndpoints"
            - "ec2:DescribeVpcPeeringConnections"
            - "ec2:DescribeVpcs"
            - "ec2:DescribeVpnConnections"
            - "ec2:DescribeVpnGateways"
            - "ec2:CreateVpnConnection"
            - "ec2:CreateTags"
            - "ec2:CreateRoute"
            - "ec2:DescribeRouteTables"
            - "ec2:DetachVpnGateway"
            - "ec2:ModifyVpcPeeringConnectionOptions"
            - "ec2:RejectVpcPeeringConnection"
            - "ec2:DisableVgwRoutePropagation"
            - "ec2:EnableVgwRoutePropagation"
            - "ec2:CreateNetworkInterface"
            - "ec2:ModifyNetworkInterfaceAttribute"
            - "ec2:DeleteNetworkInterface"
            - "ec2:CreateNetworkInterfacePermission"
            - "guardduty:GetDetector"
            - "guardduty:GetFindings"
            - "guardduty:GetFindingsStatistics"
            - "guardduty:GetIPSet"
            - "guardduty:GetInvitationsCount"
            - "guardduty:GetMasterAccount"
            - "guardduty:GetMembers"
            - "guardduty:GetThreatIntelSet"
            - "guardduty:ListDetectors"
            - "guardduty:ListFilters"
            - "guardduty:ListFindings"
            - "guardduty:ListIPSets"
            - "guardduty:ListInvitations"
            - "guardduty:ListMembers"
            - "guardduty:ListThreatIntelSets"
            - "ram:AcceptResourceShareInvitation"
            - "ram:DeleteResourceShare"
            - "ram:GetResourcePolicies"
            - "ram:GetResourceShareAssociations"
            - "ram:GetResourceShareInvitations"
            - "ram:GetResourceShares"
            - "ram:ListPendingInvitationResources"
            - "ram:ListPrincipals"
            - "ram:ListResources"
            - "ram:RejectResourceShareInvitation"
            - "route53resolver:AssociateResolverRule"
            - "route53resolver:DeleteResolverRule"
            - "route53resolver:DisassociateResolverRule"
            - "route53resolver:GetResolverRule"
            - "route53resolver:GetResolverRuleAssociation"
            - "route53resolver:ListResolverRuleAssociations"
            - "route53resolver:ListResolverRules"
            - "route53:AssociateVPCWithHostedZone"
            - "route53:DisassociateVPCFromHostedZone"
            - "directconnect:*"
          resource:
            - "*"
        - effect: Allow
          action:
            - "ram:*"
          resource:
            - "*"
          condition:
            StringEquals:
              ram:RequestedResourceType: route53resolver:ResolverRule
        - effect: Allow
          action:
            - "ec2:CreateTransitGatewayVpcAttachment"
          resource:
            - "arn:aws:ec2:*:*:subnet/*"
            - "arn:aws:ec2:*:*:transit-gateway/*"
            - "arn:aws:ec2:*:*:vpc/*"
            - "arn:aws:ec2:*:*:transit-gateway-attachment/*"
        - effect: Allow
          action:
            - "ec2:CreateCustomerGateway"
            - "ec2:DeleteCustomerGateway"
            - "ec2:CreateVpnGateway"
            - "ec2:AttachVpnGateway"
            - "ec2:DetachVpnGateway"
            - "ec2:DeleteVpnGateway"
            - "ec2:CreateVpnConnection"
            - "ec2:ModifyVpnConnection"
            - "ec2:ModifyVpnTunnelOptions"
            - "ec2:DeleteVpnConnection"
            - "ec2:EnableVgwRoutePropagation"
            - "ec2:DisableVgwRoutePropagation"
            - "ec2:GetVpnConnectionDeviceTypes"
            - "ec2:GetVpnConnectionDeviceSampleConfiguration"
          resource:
            - "*"
        - effect: Allow
          action:
            - "ec2:CreateRoute"
            - "ec2:CreateVpcPeeringConnection"
            - "ec2:DeleteRoute"
            - "ec2:DeleteVpcPeeringConnection"
          resource:
            - "*"
        - effect: Allow
          action:
            - "ec2:CreateVpnGateway"
            - "directconnect:*"
            - "ec2:DeleteVpnGateway"
            - "ec2:AttachVpnGateway"
            - "ec2:DetachVpnGateway"
          resource:
            - "*"
        - effect: Allow
          action:
            - "ec2:CreateTags"
            - "ec2:DeleteTags"
          resource:
            - "arn:aws:ec2:*:*:customer-gateway/*"
            - "arn:aws:ec2:*:*:vpn-gateway/*"
            - "arn:aws:ec2:*:*:vpn-connection/*"
            - "arn:aws:ec2:*:*:vpc-peering-connection/*"
            - "arn:aws:ec2:*:*:vpn-gateway/*"
            - "arn:aws:ec2:*:*:transit-gateway-attachment/*"
        - effect: Allow
          action:
            - "iam:CreateServiceLinkedRole"
          resource:
            - "arn:aws:iam::*:role/aws-service-role/transitgateway.amazonaws.com/AWSServiceRoleForVPCTransitGateway*"
          condition:
            StringLike:
              iam:AWSServiceName: transitgateway.amazonaws.com
        - effect: Allow
          action:
            - "iam:AttachRolePolicy"
            - "iam:PutRolePolicy"
          resource:
            - "arn:aws:iam::*:role/aws-service-role/transitgateway.amazonaws.com/AWSServiceRoleForVPCTransitGateway*"
    awsManagedPolicies:
      - "AmazonEC2ReadOnlyAccess"

- apiVersion: aws.managed.openshift.io/v1alpha1
  kind: AWSFederatedRole
  metadata:
    name: read-only
    namespace: aws-account-operator
  spec:
    roleDisplayName: Read only
    roleDescription: User may view all AWS resources for this cluster, but not modify, create or delete resources.
    awsCustomPolicy:
      name:  BillingReadOnlyAccess
      description: Description of BillingReadOnlyAccess
      awsStatements:
        - effect: Allow
          action:
          - "aws-portal:ViewAccount"
          - "aws-portal:ViewBilling"
          resource:
          - "*"
    awsManagedPolicies:
    - "AWSAccountUsageReportAccess"
    - "AmazonEC2ReadOnlyAccess"
    - "AmazonS3ReadOnlyAccess"
    - "IAMReadOnlyAccess"
    - "CloudWatchReadOnlyAccess"
